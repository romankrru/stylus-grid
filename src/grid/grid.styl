columns = 12
gutter = 1rem
breakpoints = {
  'md': 960px,
  'sm': 720px
}

maxWidth = 1200px

.grid__row,
[class^='grid__col'] {
  box-sizing: border-box;  
}

generateGrid()
  gutterCompensation = gutter / -2
  halfGutter = gutter / 2
  outerMargin = gutter / 2

  box-sizing: border-box;
  max-width: maxWidth;
  margin-right: auto;
  margin-left: auto;
  padding-right: outerMargin;
  padding-left: outerMargin;

  &__row 
    display: flex;
    flex: 0 1 auto;
    flex-direction: row;
    flex-wrap: wrap;

    margin-right: gutterCompensation;
    margin-left: gutterCompensation;

  // alignments
  &__row_v-top
    align-items flex-start

  &__row_v-center
    align-items center

  &__row_v-bottom
    align-items flex-end

  &__row_h-start
    justify-content flex-start

   &__row_h-center
    justify-content center

  &__row_h-end
    justify-content flex-end

  &__row_h-around
    justify-content space-around

  &__row_h-between
    justify-content space-between

  // grid cols
  &__col
    flex: 1 1 0;
    padding-right: halfGutter;
    padding-left: halfGutter;

    // generate order
    for breakpoint in breakpoints
      @media (max-width: breakpoints[breakpoint])
        &_{breakpoint}_first
          order -10

        &_{breakpoint}_last
          order 10

    for n in (1..columns)
      &_{n} 
        flex-basis: ((100% * n) / columns);
        max-width: ((100% * n) / columns);
        padding-right: halfGutter;
        padding-left: halfGutter;

    for breakpoint in breakpoints
      @media (max-width: breakpoints[breakpoint])
        for n in (1..columns)
          &_{breakpoint}_{n}
            flex-basis: ((100% * n) / columns);
            max-width: ((100% * n) / columns);
            padding-right: halfGutter;
            padding-left: halfGutter;

    // offsets
    for n in (1..columns)
      &_offset-{n} 
        margin-left: (100% / columns * n)

    for breakpoint in breakpoints
      @media (max-width: breakpoints[breakpoint])
        for n in (1..columns)
          &_{breakpoint}_offset-{n}
            margin-left: (100% / columns * n)

.grid
  generateGrid()


